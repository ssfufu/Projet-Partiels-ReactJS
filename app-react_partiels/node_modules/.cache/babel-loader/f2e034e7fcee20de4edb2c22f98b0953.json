{"ast":null,"code":"var _jsxFileName = \"/Users/mathieu/Desktop/Travail/Partiels/ReactJS/Projet-Partiels-ReactJS/app-react_partiels/src/A/App.jsx\";\nimport React, { Component } from 'react';\nimport Lettre from '../Lettres/Lettres.jsx';\nimport Clavier from '../B/Clavier.jsx';\nimport Compteur from '../C/Compteur.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mots = [\"ARGILE\", \"CHAISE\", \"WHISKY\", \"JOYEUX\", \"IMMENSE\", \"IMAGES\", \"ACCOUCHE\", \"ACHARNER\", \"BOHNOMME\", \"GUIRLANDE\", \"DIVERSION\", \"ECLAIRAGES\", \"MUSCULATION\"];\nconst lettresAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.etat = {\n      lettres: this.generationMots(),\n      selection: [],\n      etatDuJeu: \"en cours\"\n    };\n\n    this.clickH = lettre => {\n      const {\n        selection,\n        etatDuJeu\n      } = this.etat;\n      return selection.filter(element => !lettre.includes(element)).length;\n    };\n\n    this.etatDuJeu = () => {\n      const {\n        lettres,\n        selection\n      } = this.etat;\n      const tests = 8 - this.essai();\n      const rechercheMot = lettres.filter(element => selection.includes(element)).length === lettres.length;\n\n      if (tests > 0 && rechercheMot) {\n        this.setState({\n          etatDuJeu: \"gagnÃ©\"\n        });\n      } else if (tests > 0) {\n        return;\n      } else {\n        this.setState({\n          etatDuJeu: \"perdu !!\"\n        });\n      }\n    };\n  }\n\n  generationMots() {\n    const resultats = [];\n    let unMot = Math.floor(Math.random() * mots.length);\n    unMot = mots[unMot];\n    const mot = unMot.split('');\n\n    while (mot.length > 0) {\n      const lettre = mot.shift();\n      resultats.push(lettre);\n    }\n\n    return resultats;\n  }\n\n  buildClavier() {\n    const resultats = [];\n    const taille = 26;\n    const toutesLesLettres = lettresAlphabet.split('');\n\n    while (resultats.length < taille) {\n      const lettre = toutesLesLettres.shift();\n      resultats.push(lettre);\n    }\n\n    return resultats;\n  }\n\n  retourDeFrappe(lettre) {\n    const {\n      selection\n    } = this.etat;\n    return selection.includes(lettre);\n  }\n\n  render() {\n    const {\n      lettres,\n      clavier\n    } = this.etat;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Jeu du pendu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.nouvellePartie,\n          children: \"Nouvelle partie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: lettres.map((lettre, index) => /*#__PURE__*/_jsxDEV(Lettre, {\n            lettre: lettre,\n            retourDeFrappe: this.retourDeFrappe(lettre) ? \"visible\" : \"hidden\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Compteur, {\n          compteur: this.essai(),\n          etatDuJeu: this.etat.etatDuJeu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard\",\n        children: clavier.map((lettre, index) => /*#__PURE__*/_jsxDEV(Clavier, {\n          lettre: lettre,\n          onClick: this.clickH,\n          retourDeFrappe: this.retourDeFrappe(lettre) ? \"gray\" : \"#17a2b8\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mathieu/Desktop/Travail/Partiels/ReactJS/Projet-Partiels-ReactJS/app-react_partiels/src/A/App.jsx"],"names":["React","Component","Lettre","Clavier","Compteur","mots","lettresAlphabet","App","etat","lettres","generationMots","selection","etatDuJeu","clickH","lettre","filter","element","includes","length","tests","essai","rechercheMot","setState","resultats","unMot","Math","floor","random","mot","split","shift","push","buildClavier","taille","toutesLesLettres","retourDeFrappe","render","clavier","nouvellePartie","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Lettre from '../Lettres/Lettres.jsx'\nimport Clavier from '../B/Clavier.jsx'\nimport Compteur from '../C/Compteur.jsx'\n\nconst mots = [\"ARGILE\",\"CHAISE\",\"WHISKY\",\"JOYEUX\",\"IMMENSE\",\"IMAGES\", \"ACCOUCHE\",\"ACHARNER\",\"BOHNOMME\",\"GUIRLANDE\",\"DIVERSION\",\"ECLAIRAGES\",\"MUSCULATION\"]\nconst lettresAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nclass App extends Component {\n\n    etat = {\n        lettres : this.generationMots(),\n        selection : [],\n        etatDuJeu : \"en cours\",\n    }\n\n    generationMots(){\n        const resultats = []\n        let unMot = Math.floor(Math.random()* mots.length)\n        unMot = mots[unMot]\n        const mot = unMot.split('')\n        while(mot.length > 0){\n            const lettre = mot.shift()\n            resultats.push(lettre)\n        }\n        return resultats\n    }\n\n    buildClavier(){\n        const resultats = []\n        const taille = 26\n        const toutesLesLettres = lettresAlphabet.split('')\n        while(resultats.length < taille){\n            const lettre = toutesLesLettres.shift()\n            resultats.push(lettre)\n        }\n        return resultats\n    }\n\n    retourDeFrappe(lettre) {\n        const{selection} = this.etat\n        return selection.includes(lettre)\n    }\n\n    clickH = lettre => {\n        const {selection, etatDuJeu} = this.etat\n        return selection.filter(element => !lettre.includes(element)).length\n    }\n\n    etatDuJeu = () =>{\n        const {lettres, selection} = this.etat\n        const tests = 8 - this.essai()\n        const rechercheMot = lettres.filter(element => selection.includes(element)).length === lettres.length\n        if(tests > 0 && rechercheMot){\n            this.setState({etatDuJeu : \"gagnÃ©\"})\n        } else if (tests > 0){\n            return\n        } else {\n            this.setState({etatDuJeu : \"perdu !!\"})\n        }\n    }\n\n    render(){\n        const {lettres, clavier} = this.etat\n\n        return (\n            <div>\n                <div>\n                    <h1>Jeu du pendu</h1>\n                    <button onClick={this.nouvellePartie}>Nouvelle partie</button>\n                </div>\n                <div>\n                    <div className=\"content\">\n                    { lettres.map((lettre, index) => (\n                        <Lettre\n                        lettre={lettre}\n                        retourDeFrappe={this.retourDeFrappe(lettre) ? \"visible\" : \"hidden\"}\n                        key={index}\n                        />\n                    ))}\n                    </div>\n                    <Compteur\n                    compteur = {this.essai()}\n                    etatDuJeu = {this.etat.etatDuJeu}\n                    />\n                </div>\n\n                <div className=\"keyboard\">\n                    { clavier.map((lettre, index) => (\n                    <Clavier\n                        lettre={lettre}\n                        key={index}\n                        onClick={this.clickH}\n                        retourDeFrappe={this.retourDeFrappe(lettre) ? \"gray\" : \"#17a2b8\"}\n                    />\n                    ))}\n                </div>\n            </div>\n\n        )\n\n\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}